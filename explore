SELECT DISTINCT DATE(timestamp_end AT TIME ZONE 'UTC') AS end_date_utc
FROM m202402.track
ORDER BY end_date_utc;

SELECT
  MIN(timestamp_end AT TIME ZONE 'Australia/Sydney') AS first_time_syd,
  MAX(timestamp_end AT TIME ZONE 'Australia/Sydney') AS last_time_syd
FROM m202402.track;

with temptable as
(
SELECT timestamp_end AT time zone 'UTC' "end_utc",
timestamp_end at TIME ZONE 'Australia/Sydney' "end_syd",
classification_id,
ST_ASTEXT(ST_EndPoint(trajectory)) as last_point
	FROM  m202402.track
	WHERE classification_id in (6, 7, 8)
)
select * from temptable where end_syd >= '2024-02-28 00:00:00'
	AND  end_syd <  '2024-02-28 05:00:00';

WITH temptable AS (
  SELECT 
    timestamp_end AT TIME ZONE 'Australia/Sydney' AS end_syd,
    ST_EndPoint(trajectory) AS last_point_geom
  FROM m202402.track
  WHERE classification_id IN (6, 7, 8)
),
filtered_points AS (
  SELECT last_point_geom
  FROM temptable
  WHERE 
    end_syd::time >= '00:00:00'
    AND end_syd::time < '05:00:00'
    AND end_syd::date BETWEEN '2024-02-27' AND '2024-02-29'
),
hull AS (
  SELECT ST_ConcaveHull(ST_Collect(last_point_geom), 0.99) AS geom
  FROM filtered_points
)
SELECT (dp).path[1] AS point_order,
       ST_X((dp).geom) AS x,
       ST_Y((dp).geom) AS y
FROM (
  SELECT ST_DumpPoints(geom) AS dp
  FROM hull
) AS dumped_points
ORDER BY point_order;






CREATE OR REPLACE FUNCTION ST_CreateFishnet(
        nrow integer, ncol integer,
        xsize float8, ysize float8,
        x0 float8 DEFAULT 0, y0 float8 DEFAULT 0,
        OUT "row" integer, OUT col integer,
        OUT geom geometry)
    RETURNS SETOF record AS
$$
SELECT i + 1 AS row, j + 1 AS col, ST_Translate(cell, j * $3 + $5, i * $4 + $6) AS geom
FROM generate_series(0, $1 - 1) AS i,
     generate_series(0, $2 - 1) AS j,
(
SELECT ('POLYGON((0 0, 0 '||$4||', '||$3||' '||$4||', '||$3||' 0,0 0))')::geometry AS cell
) AS foo;
$$ LANGUAGE sql IMMUTABLE STRICT;


SELECT * FROM classification